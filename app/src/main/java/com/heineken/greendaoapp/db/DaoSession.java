package com.heineken.greendaoapp.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.heineken.greendaoapp.db.Configuracion;
import com.heineken.greendaoapp.db.Lecturas;
import com.heineken.greendaoapp.db.Lotes;
import com.heineken.greendaoapp.db.Productos;
import com.heineken.greendaoapp.db.Rutas;
import com.heineken.greendaoapp.db.Salidas;
import com.heineken.greendaoapp.db.Secciones;
import com.heineken.greendaoapp.db.UM;
import com.heineken.greendaoapp.db.Familia;
import com.heineken.greendaoapp.db.Propiedades;

import com.heineken.greendaoapp.db.ConfiguracionDao;
import com.heineken.greendaoapp.db.LecturasDao;
import com.heineken.greendaoapp.db.LotesDao;
import com.heineken.greendaoapp.db.ProductosDao;
import com.heineken.greendaoapp.db.RutasDao;
import com.heineken.greendaoapp.db.SalidasDao;
import com.heineken.greendaoapp.db.SeccionesDao;
import com.heineken.greendaoapp.db.UMDao;
import com.heineken.greendaoapp.db.FamiliaDao;
import com.heineken.greendaoapp.db.PropiedadesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig configuracionDaoConfig;
    private final DaoConfig lecturasDaoConfig;
    private final DaoConfig lotesDaoConfig;
    private final DaoConfig productosDaoConfig;
    private final DaoConfig rutasDaoConfig;
    private final DaoConfig salidasDaoConfig;
    private final DaoConfig seccionesDaoConfig;
    private final DaoConfig uMDaoConfig;
    private final DaoConfig familiaDaoConfig;
    private final DaoConfig propiedadesDaoConfig;

    private final ConfiguracionDao configuracionDao;
    private final LecturasDao lecturasDao;
    private final LotesDao lotesDao;
    private final ProductosDao productosDao;
    private final RutasDao rutasDao;
    private final SalidasDao salidasDao;
    private final SeccionesDao seccionesDao;
    private final UMDao uMDao;
    private final FamiliaDao familiaDao;
    private final PropiedadesDao propiedadesDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        configuracionDaoConfig = daoConfigMap.get(ConfiguracionDao.class).clone();
        configuracionDaoConfig.initIdentityScope(type);

        lecturasDaoConfig = daoConfigMap.get(LecturasDao.class).clone();
        lecturasDaoConfig.initIdentityScope(type);

        lotesDaoConfig = daoConfigMap.get(LotesDao.class).clone();
        lotesDaoConfig.initIdentityScope(type);

        productosDaoConfig = daoConfigMap.get(ProductosDao.class).clone();
        productosDaoConfig.initIdentityScope(type);

        rutasDaoConfig = daoConfigMap.get(RutasDao.class).clone();
        rutasDaoConfig.initIdentityScope(type);

        salidasDaoConfig = daoConfigMap.get(SalidasDao.class).clone();
        salidasDaoConfig.initIdentityScope(type);

        seccionesDaoConfig = daoConfigMap.get(SeccionesDao.class).clone();
        seccionesDaoConfig.initIdentityScope(type);

        uMDaoConfig = daoConfigMap.get(UMDao.class).clone();
        uMDaoConfig.initIdentityScope(type);

        familiaDaoConfig = daoConfigMap.get(FamiliaDao.class).clone();
        familiaDaoConfig.initIdentityScope(type);

        propiedadesDaoConfig = daoConfigMap.get(PropiedadesDao.class).clone();
        propiedadesDaoConfig.initIdentityScope(type);

        configuracionDao = new ConfiguracionDao(configuracionDaoConfig, this);
        lecturasDao = new LecturasDao(lecturasDaoConfig, this);
        lotesDao = new LotesDao(lotesDaoConfig, this);
        productosDao = new ProductosDao(productosDaoConfig, this);
        rutasDao = new RutasDao(rutasDaoConfig, this);
        salidasDao = new SalidasDao(salidasDaoConfig, this);
        seccionesDao = new SeccionesDao(seccionesDaoConfig, this);
        uMDao = new UMDao(uMDaoConfig, this);
        familiaDao = new FamiliaDao(familiaDaoConfig, this);
        propiedadesDao = new PropiedadesDao(propiedadesDaoConfig, this);

        registerDao(Configuracion.class, configuracionDao);
        registerDao(Lecturas.class, lecturasDao);
        registerDao(Lotes.class, lotesDao);
        registerDao(Productos.class, productosDao);
        registerDao(Rutas.class, rutasDao);
        registerDao(Salidas.class, salidasDao);
        registerDao(Secciones.class, seccionesDao);
        registerDao(UM.class, uMDao);
        registerDao(Familia.class, familiaDao);
        registerDao(Propiedades.class, propiedadesDao);
    }
    
    public void clear() {
        configuracionDaoConfig.clearIdentityScope();
        lecturasDaoConfig.clearIdentityScope();
        lotesDaoConfig.clearIdentityScope();
        productosDaoConfig.clearIdentityScope();
        rutasDaoConfig.clearIdentityScope();
        salidasDaoConfig.clearIdentityScope();
        seccionesDaoConfig.clearIdentityScope();
        uMDaoConfig.clearIdentityScope();
        familiaDaoConfig.clearIdentityScope();
        propiedadesDaoConfig.clearIdentityScope();
    }

    public ConfiguracionDao getConfiguracionDao() {
        return configuracionDao;
    }

    public LecturasDao getLecturasDao() {
        return lecturasDao;
    }

    public LotesDao getLotesDao() {
        return lotesDao;
    }

    public ProductosDao getProductosDao() {
        return productosDao;
    }

    public RutasDao getRutasDao() {
        return rutasDao;
    }

    public SalidasDao getSalidasDao() {
        return salidasDao;
    }

    public SeccionesDao getSeccionesDao() {
        return seccionesDao;
    }

    public UMDao getUMDao() {
        return uMDao;
    }

    public FamiliaDao getFamiliaDao() {
        return familiaDao;
    }

    public PropiedadesDao getPropiedadesDao() {
        return propiedadesDao;
    }

}
